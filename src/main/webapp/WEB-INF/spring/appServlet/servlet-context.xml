<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<tx:annotation-driven />
	<task:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/img/**" location="/img/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/js/**" location="/js/" />
	<resources mapping="/media/**" location="/media/" />
	<resources mapping="/summernoteImage/**"
		location="/summernote_image/"></resources>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760" /> <!-- 10MB까지 받겟다. -->
		<beans:property name="maxInMemorySize" value="10485760"></beans:property>
	</beans:bean>


	<context:component-scan base-package="kh.spring" />
	<beans:bean id="logaop" class="kh.spring.aspect.LogAdvisor" />

	<aop:config>

		<aop:pointcut
			expression="execution(* kh.spring.controller.*Controller.*(..))"
			id="test1" />
		<!--모든 리턴값의 kh.spring.controller패키지 밑의 HomeController 밑에 home이라는 메서드(매개변수는 
			있을수도 없을수도) -->
		<aop:aspect id="logPrint" ref="logaop">
			<!-- 어느 시점에 어느 메서드를 aop 적용할 것인지 정하는 부분 -->
			<!-- <aop:before method="aopTest" pointcut-ref="test1"/> -->
			<aop:around method="aroundTest" pointcut-ref="test1" />
		</aop:aspect>
	</aop:config>

	<aop:config>
		<aop:pointcut
			expression="execution(* kh.spring.controller.BoardController.*(..))"
			id="test2" />
		<aop:aspect id="goLogin" ref="logaop">
			<aop:around method="aroundAdvice" pointcut-ref="test2" />
		</aop:aspect>
	</aop:config>


</beans:beans>
